angular.module("ui.bootstrap",["ui.bootstrap.tpls","ui.bootstrap.accordion","ui.bootstrap.alert","ui.bootstrap.buttons","ui.bootstrap.carousel","ui.bootstrap.collapse","ui.bootstrap.dialog","ui.bootstrap.dropdownToggle","ui.bootstrap.modal","ui.bootstrap.pagination","ui.bootstrap.popover","ui.bootstrap.tabs","ui.bootstrap.tooltip","ui.bootstrap.transition","ui.bootstrap.typeahead"]);
angular.module("ui.bootstrap.tpls",["template/accordion/accordion-group.html","template/accordion/accordion.html","template/alert/alert.html","template/carousel/carousel.html","template/carousel/slide.html","template/dialog/message.html","template/pagination/pagination.html","template/popover/popover.html","template/tabs/pane.html","template/tabs/tabs.html","template/tooltip/tooltip-popup.html","template/typeahead/typeahead.html"]);
angular.module("ui.bootstrap.accordion",["ui.bootstrap.collapse"]).constant("accordionConfig",{closeOthers:true}).controller("AccordionController",["$scope","$attrs","accordionConfig",function($scope,$attrs,accordionConfig){this.groups=[];this.closeOthers=function(openGroup){var closeOthers=angular.isDefined($attrs.closeOthers)?$scope.$eval($attrs.closeOthers):accordionConfig.closeOthers;if(closeOthers)angular.forEach(this.groups,function(group){if(group!==openGroup)group.isOpen=false})};this.addGroup=
function(groupScope){var that=this;this.groups.push(groupScope);groupScope.$on("$destroy",function(event){that.removeGroup(groupScope)})};this.removeGroup=function(group){var index=this.groups.indexOf(group);if(index!==-1)this.groups.splice(this.groups.indexOf(group),1)}}]).directive("accordion",function(){return{restrict:"EA",controller:"AccordionController",transclude:true,replace:false,templateUrl:"template/accordion/accordion.html"}}).directive("accordionGroup",["$parse","$transition","$timeout",
function($parse,$transition,$timeout){return{require:"^accordion",restrict:"EA",transclude:true,replace:true,templateUrl:"template/accordion/accordion-group.html",scope:{heading:"@"},controller:["$scope",function($scope){this.setHeading=function(element){this.heading=element}}],link:function(scope,element,attrs,accordionCtrl){var getIsOpen,setIsOpen;accordionCtrl.addGroup(scope);scope.isOpen=false;if(attrs.isOpen){getIsOpen=$parse(attrs.isOpen);setIsOpen=getIsOpen.assign;scope.$watch(function watchIsOpen(){return getIsOpen(scope.$parent)},
function updateOpen(value){scope.isOpen=value});scope.isOpen=getIsOpen?getIsOpen(scope.$parent):false}scope.$watch("isOpen",function(value){if(value)accordionCtrl.closeOthers(scope);if(setIsOpen)setIsOpen(scope.$parent,value)})}}}]).directive("accordionHeading",function(){return{restrict:"E",transclude:true,template:"",replace:true,require:"^accordionGroup",compile:function(element,attr,transclude){return function link(scope,element,attr,accordionGroupCtrl){accordionGroupCtrl.setHeading(transclude(scope,
function(){}))}}}}).directive("accordionTransclude",function(){return{require:"^accordionGroup",link:function(scope,element,attr,controller){scope.$watch(function(){return controller[attr.accordionTransclude]},function(heading){if(heading){element.html("");element.append(heading)}})}}});angular.module("ui.bootstrap.alert",[]).directive("alert",function(){return{restrict:"EA",templateUrl:"template/alert/alert.html",transclude:true,replace:true,scope:{type:"=",close:"&"}}});
angular.module("ui.bootstrap.buttons",[]).constant("buttonConfig",{activeClass:"active",toggleEvent:"click"}).directive("btnRadio",["buttonConfig",function(buttonConfig){var activeClass=buttonConfig.activeClass||"active";var toggleEvent=buttonConfig.toggleEvent||"click";return{require:"ngModel",link:function(scope,element,attrs,ngModelCtrl){var value=scope.$eval(attrs.btnRadio);scope.$watch(function(){return ngModelCtrl.$modelValue},function(modelValue){if(angular.equals(modelValue,value))element.addClass(activeClass);
else element.removeClass(activeClass)});element.bind(toggleEvent,function(){if(!element.hasClass(activeClass))scope.$apply(function(){ngModelCtrl.$setViewValue(value)})})}}}]).directive("btnCheckbox",["buttonConfig",function(buttonConfig){var activeClass=buttonConfig.activeClass||"active";var toggleEvent=buttonConfig.toggleEvent||"click";return{require:"ngModel",link:function(scope,element,attrs,ngModelCtrl){var trueValue=scope.$eval(attrs.btnCheckboxTrue);var falseValue=scope.$eval(attrs.btnCheckboxFalse);
trueValue=angular.isDefined(trueValue)?trueValue:true;falseValue=angular.isDefined(falseValue)?falseValue:false;scope.$watch(function(){return ngModelCtrl.$modelValue},function(modelValue){if(angular.equals(modelValue,trueValue))element.addClass(activeClass);else element.removeClass(activeClass)});element.bind(toggleEvent,function(){scope.$apply(function(){ngModelCtrl.$setViewValue(element.hasClass(activeClass)?falseValue:trueValue)})})}}}]);
angular.module("ui.bootstrap.carousel",["ui.bootstrap.transition"]).controller("CarouselController",["$scope","$timeout","$transition","$q",function($scope,$timeout,$transition,$q){var self=this,slides=self.slides=[],currentIndex=-1,currentTimeout,isPlaying;self.currentSlide=null;self.select=function(nextSlide,direction){var nextIndex=slides.indexOf(nextSlide);if(direction===undefined)direction=nextIndex>currentIndex?"next":"prev";if(nextSlide&&nextSlide!==self.currentSlide)if($scope.$currentTransition){$scope.$currentTransition.cancel();
$timeout(goNext)}else goNext();function goNext(){if(self.currentSlide&&angular.isString(direction)&&!$scope.noTransition&&nextSlide.$element){nextSlide.$element.addClass(direction);nextSlide.$element[0].offsetWidth=nextSlide.$element[0].offsetWidth;angular.forEach(slides,function(slide){angular.extend(slide,{direction:"",entering:false,leaving:false,active:false})});angular.extend(nextSlide,{direction:direction,active:true,entering:true});angular.extend(self.currentSlide||{},{direction:direction,
leaving:true});$scope.$currentTransition=$transition(nextSlide.$element,{});(function(next,current){$scope.$currentTransition.then(function(){transitionDone(next,current)},function(){transitionDone(next,current)})})(nextSlide,self.currentSlide)}else transitionDone(nextSlide,self.currentSlide);self.currentSlide=nextSlide;currentIndex=nextIndex;restartTimer()}function transitionDone(next,current){angular.extend(next,{direction:"",active:true,leaving:false,entering:false});angular.extend(current||{},
{direction:"",active:false,leaving:false,entering:false});$scope.$currentTransition=null}};self.indexOfSlide=function(slide){return slides.indexOf(slide)};$scope.next=function(){var newIndex=(currentIndex+1)%slides.length;return self.select(slides[newIndex],"next")};$scope.prev=function(){var newIndex=currentIndex-1<0?slides.length-1:currentIndex-1;return self.select(slides[newIndex],"prev")};$scope.select=function(slide){self.select(slide)};$scope.isActive=function(slide){return self.currentSlide===
slide};$scope.slides=function(){return slides};$scope.$watch("interval",restartTimer);function restartTimer(){if(currentTimeout)$timeout.cancel(currentTimeout);function go(){if(isPlaying){$scope.next();restartTimer()}else $scope.pause()}var interval=+$scope.interval;if(!isNaN(interval)&&interval>=0)currentTimeout=$timeout(go,interval)}$scope.play=function(){if(!isPlaying){isPlaying=true;restartTimer()}};$scope.pause=function(){isPlaying=false;if(currentTimeout)$timeout.cancel(currentTimeout)};self.addSlide=
function(slide,element){slide.$element=element;slides.push(slide);if(slides.length===1||slide.active){self.select(slides[slides.length-1]);if(slides.length==1)$scope.play()}else slide.active=false};self.removeSlide=function(slide){var index=slides.indexOf(slide);slides.splice(index,1);if(slides.length>0&&slide.active)if(index>=slides.length)self.select(slides[index-1]);else self.select(slides[index])}}]).directive("carousel",[function(){return{restrict:"EA",transclude:true,replace:true,controller:"CarouselController",
require:"carousel",templateUrl:"template/carousel/carousel.html",scope:{interval:"=",noTransition:"="}}}]).directive("slide",[function(){return{require:"^carousel",restrict:"EA",transclude:true,replace:true,templateUrl:"template/carousel/slide.html",scope:{active:"="},link:function(scope,element,attrs,carouselCtrl){carouselCtrl.addSlide(scope,element);scope.$on("$destroy",function(){carouselCtrl.removeSlide(scope)});scope.$watch("active",function(active){if(active)carouselCtrl.select(scope)})}}}]);
angular.module("ui.bootstrap.collapse",["ui.bootstrap.transition"]).directive("collapse",["$transition",function($transition){var fixUpHeight=function(scope,element,height){element.removeClass("collapse");element.css({height:height});var x=element[0].offsetWidth;element.addClass("collapse")};return{link:function(scope,element,attrs){var isCollapsed;var initialAnimSkip=true;scope.$watch(function(){return element[0].scrollHeight},function(value){if(element[0].scrollHeight!==0)if(!isCollapsed)if(initialAnimSkip)fixUpHeight(scope,
element,element[0].scrollHeight+"px");else fixUpHeight(scope,element,"auto")});scope.$watch(attrs.collapse,function(value){if(value)collapse();else expand()});var currentTransition;var doTransition=function(change){if(currentTransition)currentTransition.cancel();currentTransition=$transition(element,change);currentTransition.then(function(){currentTransition=undefined},function(){currentTransition=undefined});return currentTransition};var expand=function(){if(initialAnimSkip){initialAnimSkip=false;
if(!isCollapsed)fixUpHeight(scope,element,"auto")}else doTransition({height:element[0].scrollHeight+"px"}).then(function(){if(!isCollapsed)fixUpHeight(scope,element,"auto")});isCollapsed=false};var collapse=function(){isCollapsed=true;if(initialAnimSkip){initialAnimSkip=false;fixUpHeight(scope,element,0)}else{fixUpHeight(scope,element,element[0].scrollHeight+"px");doTransition({"height":"0"})}}}}}]);var dialogModule=angular.module("ui.bootstrap.dialog",["ui.bootstrap.transition"]);
dialogModule.controller("MessageBoxController",["$scope","dialog","model",function($scope,dialog,model){$scope.title=model.title;$scope.message=model.message;$scope.buttons=model.buttons;$scope.close=function(res){dialog.close(res)}}]);
dialogModule.provider("$dialog",function(){var defaults={backdrop:true,dialogClass:"modal",backdropClass:"modal-backdrop",transitionClass:"fade",triggerClass:"in",dialogOpenClass:"modal-open",resolve:{},backdropFade:false,dialogFade:false,keyboard:true,backdropClick:true};var globalOptions={};var activeBackdrops={value:0};this.options=function(value){globalOptions=value};this.$get=["$http","$document","$compile","$rootScope","$controller","$templateCache","$q","$transition","$injector",function($http,
$document,$compile,$rootScope,$controller,$templateCache,$q,$transition,$injector){var body=$document.find("body");function createElement(clazz){var el=angular.element("<div>");el.addClass(clazz);return el}function Dialog(opts){var self=this,options=this.options=angular.extend({},defaults,globalOptions,opts);this.backdropEl=createElement(options.backdropClass);if(options.backdropFade){this.backdropEl.addClass(options.transitionClass);this.backdropEl.removeClass(options.triggerClass)}this.modalEl=
createElement(options.dialogClass);if(options.dialogFade){this.modalEl.addClass(options.transitionClass);this.modalEl.removeClass(options.triggerClass)}this.handledEscapeKey=function(e){if(e.which===27){self.close();e.preventDefault();self.$scope.$apply()}};this.handleBackDropClick=function(e){self.close();e.preventDefault();self.$scope.$apply()}}Dialog.prototype.isOpen=function(){return this._open};Dialog.prototype.open=function(templateUrl,controller){var self=this,options=this.options;if(templateUrl)options.templateUrl=
templateUrl;if(controller)options.controller=controller;if(!(options.template||options.templateUrl))throw new Error("Dialog.open expected template or templateUrl, neither found. Use options or open method to specify them.");this._loadResolves().then(function(locals){var $scope=locals.$scope=self.$scope=locals.$scope?locals.$scope:$rootScope.$new();self.modalEl.html(locals.$template);if(self.options.controller){var ctrl=$controller(self.options.controller,locals);self.modalEl.contents().data("ngControllerController",
ctrl)}$compile(self.modalEl)($scope);self._addElementsToDom();body.addClass(self.options.dialogOpenClass);setTimeout(function(){if(self.options.dialogFade)self.modalEl.addClass(self.options.triggerClass);if(self.options.backdropFade)self.backdropEl.addClass(self.options.triggerClass)});self._bindEvents()});this.deferred=$q.defer();return this.deferred.promise};Dialog.prototype.close=function(result){var self=this;var fadingElements=this._getFadingElements();body.removeClass(self.options.dialogOpenClass);
if(fadingElements.length>0){for(var i=fadingElements.length-1;i>=0;i--)$transition(fadingElements[i],removeTriggerClass).then(onCloseComplete);return}this._onCloseComplete(result);function removeTriggerClass(el){el.removeClass(self.options.triggerClass)}function onCloseComplete(){if(self._open)self._onCloseComplete(result)}};Dialog.prototype._getFadingElements=function(){var elements=[];if(this.options.dialogFade)elements.push(this.modalEl);if(this.options.backdropFade)elements.push(this.backdropEl);
return elements};Dialog.prototype._bindEvents=function(){if(this.options.keyboard)body.bind("keydown",this.handledEscapeKey);if(this.options.backdrop&&this.options.backdropClick)this.backdropEl.bind("click",this.handleBackDropClick)};Dialog.prototype._unbindEvents=function(){if(this.options.keyboard)body.unbind("keydown",this.handledEscapeKey);if(this.options.backdrop&&this.options.backdropClick)this.backdropEl.unbind("click",this.handleBackDropClick)};Dialog.prototype._onCloseComplete=function(result){this._removeElementsFromDom();
this._unbindEvents();this.deferred.resolve(result)};Dialog.prototype._addElementsToDom=function(){body.append(this.modalEl);if(this.options.backdrop){if(activeBackdrops.value===0)body.append(this.backdropEl);activeBackdrops.value++}this._open=true};Dialog.prototype._removeElementsFromDom=function(){this.modalEl.remove();if(this.options.backdrop){activeBackdrops.value--;if(activeBackdrops.value===0)this.backdropEl.remove()}this._open=false};Dialog.prototype._loadResolves=function(){var values=[],keys=
[],templatePromise,self=this;if(this.options.template)templatePromise=$q.when(this.options.template);else if(this.options.templateUrl)templatePromise=$http.get(this.options.templateUrl,{cache:$templateCache}).then(function(response){return response.data});angular.forEach(this.options.resolve||[],function(value,key){keys.push(key);values.push(angular.isString(value)?$injector.get(value):$injector.invoke(value))});keys.push("$template");values.push(templatePromise);return $q.all(values).then(function(values){var locals=
{};angular.forEach(values,function(value,index){locals[keys[index]]=value});locals.dialog=self;return locals})};return{dialog:function(opts){return new Dialog(opts)},messageBox:function(title,message,buttons){return new Dialog({templateUrl:"template/dialog/message.html",controller:"MessageBoxController",resolve:{model:function(){return{title:title,message:message,buttons:buttons}}}})}}}]});
angular.module("ui.bootstrap.dropdownToggle",[]).directive("dropdownToggle",["$document","$location","$window",function($document,$location,$window){var openElement=null,close;return{restrict:"CA",link:function(scope,element,attrs){scope.$watch(function dropdownTogglePathWatch(){return $location.path()},function dropdownTogglePathWatchAction(){if(close)close()});element.parent().bind("click",function(event){if(close)close()});element.bind("click",function(event){event.preventDefault();event.stopPropagation();
var iWasOpen=false;if(openElement){iWasOpen=openElement===element;close()}if(!iWasOpen){element.parent().addClass("open");openElement=element;close=function(event){if(event){event.preventDefault();event.stopPropagation()}$document.unbind("click",close);element.parent().removeClass("open");close=null;openElement=null};$document.bind("click",close)}})}}}]);
angular.module("ui.bootstrap.modal",["ui.bootstrap.dialog"]).directive("modal",["$parse","$dialog",function($parse,$dialog){var backdropEl;var body=angular.element(document.getElementsByTagName("body")[0]);return{restrict:"EA",terminal:true,link:function(scope,elm,attrs){var opts=angular.extend({},scope.$eval(attrs.uiOptions||attrs.bsOptions||attrs.options));var shownExpr=attrs.modal||attrs.show;var setClosed;opts=angular.extend(opts,{template:elm.html(),resolve:{$scope:function(){return scope}}});
var dialog=$dialog.dialog(opts);elm.remove();if(attrs.close)setClosed=function(){$parse(attrs.close)(scope)};else setClosed=function(){if(angular.isFunction($parse(shownExpr).assign))$parse(shownExpr).assign(scope,false)};scope.$watch(shownExpr,function(isShown,oldShown){if(isShown)dialog.open().then(function(){setClosed()});else if(dialog.isOpen())dialog.close()})}}}]);
angular.module("ui.bootstrap.pagination",[]).constant("paginationConfig",{boundaryLinks:false,directionLinks:true,firstText:"First",previousText:"Previous",nextText:"Next",lastText:"Last"}).directive("pagination",["paginationConfig",function(paginationConfig){return{restrict:"EA",scope:{numPages:"=",currentPage:"=",maxSize:"=",onSelectPage:"&"},templateUrl:"template/pagination/pagination.html",replace:true,link:function(scope,element,attrs){var boundaryLinks=angular.isDefined(attrs.boundaryLinks)?
scope.$eval(attrs.boundaryLinks):paginationConfig.boundaryLinks;var directionLinks=angular.isDefined(attrs.directionLinks)?scope.$eval(attrs.directionLinks):paginationConfig.directionLinks;var firstText=angular.isDefined(attrs.firstText)?attrs.firstText:paginationConfig.firstText;var previousText=angular.isDefined(attrs.previousText)?attrs.previousText:paginationConfig.previousText;var nextText=angular.isDefined(attrs.nextText)?attrs.nextText:paginationConfig.nextText;var lastText=angular.isDefined(attrs.lastText)?
attrs.lastText:paginationConfig.lastText;function makePage(number,text,isActive,isDisabled){return{number:number,text:text,active:isActive,disabled:isDisabled}}scope.$watch("numPages + currentPage + maxSize",function(){scope.pages=[];var maxSize=scope.maxSize&&scope.maxSize<scope.numPages?scope.maxSize:scope.numPages;var startPage=scope.currentPage-Math.floor(maxSize/2);if(startPage<1)startPage=1;if(startPage+maxSize-1>scope.numPages)startPage=startPage-(startPage+maxSize-1-scope.numPages);for(var number=
startPage,max=startPage+maxSize;number<max;number++){var page=makePage(number,number,scope.isActive(number),false);scope.pages.push(page)}if(directionLinks){var previousPage=makePage(scope.currentPage-1,previousText,false,scope.noPrevious());scope.pages.unshift(previousPage);var nextPage=makePage(scope.currentPage+1,nextText,false,scope.noNext());scope.pages.push(nextPage)}if(boundaryLinks){var firstPage=makePage(1,firstText,false,scope.noPrevious());scope.pages.unshift(firstPage);var lastPage=makePage(scope.numPages,
lastText,false,scope.noNext());scope.pages.push(lastPage)}if(scope.currentPage>scope.numPages)scope.selectPage(scope.numPages)});scope.noPrevious=function(){return scope.currentPage===1};scope.noNext=function(){return scope.currentPage===scope.numPages};scope.isActive=function(page){return scope.currentPage===page};scope.selectPage=function(page){if(!scope.isActive(page)&&page>0&&page<=scope.numPages){scope.currentPage=page;scope.onSelectPage({page:page})}}}}}]);
angular.module("ui.bootstrap.popover",[]).directive("popoverPopup",function(){return{restrict:"EA",replace:true,scope:{popoverTitle:"@",popoverContent:"@",placement:"@",animation:"&",isOpen:"&"},templateUrl:"template/popover/popover.html"}}).directive("popover",["$compile","$timeout","$parse","$window",function($compile,$timeout,$parse,$window){var template="<popover-popup "+'popover-title="{{tt_title}}" '+'popover-content="{{tt_popover}}" '+'placement="{{tt_placement}}" '+'animation="tt_animation()" '+
'is-open="tt_isOpen"'+">"+"</popover-popup>";return{scope:true,link:function(scope,element,attr){var popover=$compile(template)(scope),transitionTimeout;attr.$observe("popover",function(val){scope.tt_popover=val});attr.$observe("popoverTitle",function(val){scope.tt_title=val});attr.$observe("popoverPlacement",function(val){scope.tt_placement=val||"top"});attr.$observe("popoverAnimation",function(val){scope.tt_animation=$parse(val)});scope.tt_isOpen=false;function getPosition(){var boundingClientRect=
element[0].getBoundingClientRect();return{width:element.prop("offsetWidth"),height:element.prop("offsetHeight"),top:boundingClientRect.top+$window.pageYOffset,left:boundingClientRect.left+$window.pageXOffset}}function show(){var position,ttWidth,ttHeight,ttPosition;if(transitionTimeout)$timeout.cancel(transitionTimeout);popover.css({top:0,left:0,display:"block"});element.after(popover);position=getPosition();ttWidth=popover.prop("offsetWidth");ttHeight=popover.prop("offsetHeight");switch(scope.tt_placement){case "right":ttPosition=
{top:position.top+position.height/2-ttHeight/2+"px",left:position.left+position.width+"px"};break;case "bottom":ttPosition={top:position.top+position.height+"px",left:position.left+position.width/2-ttWidth/2+"px"};break;case "left":ttPosition={top:position.top+position.height/2-ttHeight/2+"px",left:position.left-ttWidth+"px"};break;default:ttPosition={top:position.top-ttHeight+"px",left:position.left+position.width/2-ttWidth/2+"px"};break}popover.css(ttPosition);scope.tt_isOpen=true}function hide(){scope.tt_isOpen=
false;if(angular.isDefined(scope.tt_animation)&&scope.tt_animation())transitionTimeout=$timeout(function(){popover.remove()},500);else popover.remove()}element.bind("click",function(){if(scope.tt_isOpen)scope.$apply(hide);else scope.$apply(show)})}}}]);
angular.module("ui.bootstrap.tabs",[]).controller("TabsController",["$rootScope","$scope","$element",function($rootScope,$scope,$element){var panes=$scope.panes=[];this.select=$scope.select=function selectPane(pane){angular.forEach(panes,function(pane){pane.selected=false});if(pane.heading){$scope.paneHeading=pane.heading;$scope.paneName=pane.heading.replace(" ","");$rootScope.$broadcast("getCount"+$scope.paneName)}pane.selected=true};this.addPane=function addPane(pane){if(!panes.length)$scope.select(pane);
panes.push(pane)};this.removePane=function removePane(pane){var index=panes.indexOf(pane);panes.splice(index,1);if(pane.selected&&panes.length>0)$scope.select(panes[index<panes.length?index:index-1])};$scope.$on("handleCountUpdate",function(scope,listCount,paneName){$('[data-tab-name="'+paneName+'"]').html(listCount)})}]).directive("tabs",function(){return{restrict:"EA",transclude:true,scope:{},controller:"TabsController",templateUrl:"template/tabs/tabs.html",replace:true}}).directive("pane",["$parse",
function($parse){return{require:"^tabs",restrict:"EA",transclude:true,scope:{heading:"@"},link:function(scope,element,attrs,tabsCtrl){var getSelected,setSelected;scope.selected=false;if(attrs.active){getSelected=$parse(attrs.active);setSelected=getSelected.assign;scope.$watch(function watchSelected(){return getSelected(scope.$parent)},function updateSelected(value){scope.selected=value});scope.selected=getSelected?getSelected(scope.$parent):false}scope.$watch("selected",function(selected){if(selected)tabsCtrl.select(scope);
if(setSelected)setSelected(scope.$parent,selected)});tabsCtrl.addPane(scope);scope.$on("$destroy",function(){tabsCtrl.removePane(scope)})},templateUrl:"template/tabs/pane.html",replace:true}}]);
angular.module("ui.bootstrap.tooltip",[]).directive("tooltipPopup",function(){return{restrict:"EA",replace:true,scope:{tooltipTitle:"@",placement:"@",animation:"&",isOpen:"&"},templateUrl:"template/tooltip/tooltip-popup.html"}}).directive("tooltip",["$compile","$timeout","$parse","$window",function($compile,$timeout,$parse,$window){var template="<tooltip-popup "+'tooltip-title="{{tt_tooltip}}" '+'placement="{{tt_placement}}" '+'animation="tt_animation()" '+'is-open="tt_isOpen"'+">"+"</tooltip-popup>";
return{scope:true,link:function(scope,element,attr){var tooltip=$compile(template)(scope),transitionTimeout;attr.$observe("tooltip",function(val){scope.tt_tooltip=val});attr.$observe("tooltipPlacement",function(val){scope.tt_placement=val||"top"});attr.$observe("tooltipAnimation",function(val){scope.tt_animation=$parse(val)});scope.tt_isOpen=false;function getPosition(){var boundingClientRect=element[0].getBoundingClientRect();return{width:element.prop("offsetWidth"),height:element.prop("offsetHeight"),
top:boundingClientRect.top+$window.pageYOffset,left:boundingClientRect.left+$window.pageXOffset}}function show(){var position,ttWidth,ttHeight,ttPosition;if(!scope.tt_tooltip)return;if(transitionTimeout)$timeout.cancel(transitionTimeout);tooltip.css({top:0,left:0,display:"block"});element.after(tooltip);position=getPosition();ttWidth=tooltip.prop("offsetWidth");ttHeight=tooltip.prop("offsetHeight");switch(scope.tt_placement){case "right":ttPosition={top:position.top+position.height/2-ttHeight/2+"px",
left:position.left+position.width+"px"};break;case "bottom":ttPosition={top:position.top+position.height+"px",left:position.left+position.width/2-ttWidth/2+"px"};break;case "left":ttPosition={top:position.top+position.height/2-ttHeight/2+"px",left:position.left-ttWidth+"px"};break;default:ttPosition={top:position.top-ttHeight+"px",left:position.left+position.width/2-ttWidth/2+"px"};break}tooltip.css(ttPosition);scope.tt_isOpen=true}function hide(){scope.tt_isOpen=false;if(angular.isDefined(scope.tt_animation)&&
scope.tt_animation())transitionTimeout=$timeout(function(){tooltip.remove()},500);else tooltip.remove()}element.bind("mouseenter",function(){scope.$apply(show)});element.bind("mouseleave",function(){scope.$apply(hide)})}}}]);
angular.module("ui.bootstrap.transition",[]).factory("$transition",["$q","$timeout","$rootScope",function($q,$timeout,$rootScope){var $transition=function(element,trigger,options){options=options||{};var deferred=$q.defer();var endEventName=$transition[options.animation?"animationEndEventName":"transitionEndEventName"];var transitionEndHandler=function(event){$rootScope.$apply(function(){element.unbind(endEventName,transitionEndHandler);deferred.resolve(element)})};if(endEventName)element.bind(endEventName,
transitionEndHandler);$timeout(function(){if(angular.isString(trigger))element.addClass(trigger);else if(angular.isFunction(trigger))trigger(element);else if(angular.isObject(trigger))element.css(trigger);if(!endEventName)deferred.resolve(element)});deferred.promise.cancel=function(){if(endEventName)element.unbind(endEventName,transitionEndHandler);deferred.reject("Transition cancelled")};return deferred.promise};var transElement=document.createElement("trans");var transitionEndEventNames={"WebkitTransition":"webkitTransitionEnd",
"MozTransition":"transitionend","OTransition":"oTransitionEnd","msTransition":"MSTransitionEnd","transition":"transitionend"};var animationEndEventNames={"WebkitTransition":"webkitAnimationEnd","MozTransition":"animationend","OTransition":"oAnimationEnd","msTransition":"MSAnimationEnd","transition":"animationend"};function findEndEventName(endEventNames){for(var name in endEventNames)if(transElement.style[name]!==undefined)return endEventNames[name]}$transition.transitionEndEventName=findEndEventName(transitionEndEventNames);
$transition.animationEndEventName=findEndEventName(animationEndEventNames);return $transition}]);
angular.module("ui.bootstrap.typeahead",[]).factory("typeaheadParser",["$parse",function($parse){var TYPEAHEAD_REGEXP=/^\s*(.*?)(?:\s+as\s+(.*?))?\s+for\s+(?:([\$\w][\$\w\d]*))\s+in\s+(.*)$/;return{parse:function(input){var match=input.match(TYPEAHEAD_REGEXP),modelMapper,viewMapper,source;if(!match)throw new Error("Expected typeahead specification in form of '_modelValue_ (as _label_)? for _item_ in _collection_'"+" but got '"+input+"'.");return{itemName:match[3],source:$parse(match[4]),viewMapper:$parse(match[2]||
match[1]),modelMapper:$parse(match[1])}}}}]).directive("typeahead",["$compile","$q","typeaheadParser",function($compile,$q,typeaheadParser){var HOT_KEYS=[9,13,27,38,40];return{require:"ngModel",link:function(originalScope,element,attrs,modelCtrl){var selected=modelCtrl.$modelValue;var minSearch=originalScope.$eval(attrs.typeaheadMinLength)||1;var parserResult=typeaheadParser.parse(attrs.typeahead);var scope=originalScope.$new();originalScope.$on("$destroy",function(){scope.$destroy()});var resetMatches=
function(){scope.matches=[];scope.activeIdx=-1};var getMatchesAsync=function(inputValue){var locals={$viewValue:inputValue};$q.when(parserResult.source(scope,locals)).then(function(matches){if(inputValue===modelCtrl.$viewValue)if(matches.length>0){scope.activeIdx=0;scope.matches.length=0;for(var i=0;i<matches.length;i++){locals[parserResult.itemName]=matches[i];scope.matches.push({label:parserResult.viewMapper(scope,locals),model:matches[i]})}scope.query=inputValue}else resetMatches()},resetMatches)};
resetMatches();scope.query=undefined;modelCtrl.$parsers.push(function(inputValue){resetMatches();if(selected)return inputValue;else if(inputValue&&inputValue.length>=minSearch)getMatchesAsync(inputValue);return undefined});modelCtrl.$render=function(){var locals={};locals[parserResult.itemName]=selected;element.val(parserResult.viewMapper(scope,locals)||modelCtrl.$viewValue);selected=undefined};scope.select=function(activeIdx){var locals={};locals[parserResult.itemName]=selected=scope.matches[activeIdx].model;
modelCtrl.$setViewValue(parserResult.modelMapper(scope,locals));modelCtrl.$render()};element.bind("keydown",function(evt){if(scope.matches.length===0||HOT_KEYS.indexOf(evt.which)===-1)return;evt.preventDefault();if(evt.which===40){scope.activeIdx=(scope.activeIdx+1)%scope.matches.length;scope.$digest()}else if(evt.which===38){scope.activeIdx=(scope.activeIdx?scope.activeIdx:scope.matches.length)-1;scope.$digest()}else if(evt.which===13||evt.which===9)scope.$apply(function(){scope.select(scope.activeIdx)});
else if(evt.which===27){scope.matches=[];scope.$digest()}});var tplElCompiled=$compile("<typeahead-popup matches='matches' active='activeIdx' select='select(activeIdx)' "+"query='query'></typeahead-popup>")(scope);element.after(tplElCompiled)}}}]).directive("typeaheadPopup",function(){return{restrict:"E",scope:{matches:"=",query:"=",active:"=",select:"&"},replace:true,templateUrl:"template/typeahead/typeahead.html",link:function(scope,element,attrs){scope.isOpen=function(){return scope.matches.length>
0};scope.isActive=function(matchIdx){return scope.active==matchIdx};scope.selectActive=function(matchIdx){scope.active=matchIdx};scope.selectMatch=function(activeIdx){scope.select({activeIdx:activeIdx})}}}}).filter("typeaheadHighlight",function(){return function(matchItem,query){return query?matchItem.replace(new RegExp(query,"gi"),"<strong>$&</strong>"):query}});
angular.module("template/accordion/accordion-group.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/accordion/accordion-group.html",'<div class="accordion-group">'+'  <div class="accordion-heading" ><a class="accordion-toggle" ng-click="isOpen = !isOpen" accordion-transclude="heading">{{heading}}</a></div>'+'  <div class="accordion-body" collapse="!isOpen">'+'    <div class="accordion-inner" ng-transclude></div>  </div>'+"</div>")}]);
angular.module("template/accordion/accordion.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/accordion/accordion.html",'<div class="accordion" ng-transclude></div>')}]);
angular.module("template/alert/alert.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/alert/alert.html","<div class='alert' ng-class='type && \"alert-\" + type'>"+"    <button type='button' class='close' ng-click='close()'>&times;</button>"+"    <div ng-transclude></div>"+"</div>")}]);
angular.module("template/carousel/carousel.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/carousel/carousel.html",'<div ng-mouseenter="pause()" ng-mouseleave="play()" class="carousel">'+'    <ol class="carousel-indicators">'+'        <li ng-repeat="slide in slides()" ng-class="{active: isActive(slide)}" ng-click="select(slide)"></li>'+"    </ol>"+'    <div class="carousel-inner" ng-transclude></div>'+'    <a ng-click="prev()" class="carousel-control left">&lsaquo;</a>'+
'    <a ng-click="next()" class="carousel-control right">&rsaquo;</a>'+"</div>"+"")}]);
angular.module("template/carousel/slide.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/carousel/slide.html",'<div ng-class="{'+"    'active': leaving || (active && !entering),"+"    'prev': (next || active) && direction=='prev',"+"    'next': (next || active) && direction=='next',"+"    'right': direction=='prev',"+"    'left': direction=='next'"+'  }" class="item" ng-transclude></div>'+"")}]);
angular.module("template/dialog/message.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/dialog/message.html",'<div class="modal-header">'+" <h1>{{ title }}</h1>"+"</div>"+'<div class="modal-body">'+" <p>{{ message }}</p>"+"</div>"+'<div class="modal-footer">'+' <button ng-repeat="btn in buttons" ng-click="close(btn.result)" class=btn ng-class="btn.cssClass">{{ btn.label }}</button>'+"</div>"+"")}]);
angular.module("template/pagination/pagination.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/pagination/pagination.html",'<div class="pagination"><ul>'+'  <li ng-repeat="page in pages" ng-class="{active: page.active, disabled: page.disabled}"><a ng-click="selectPage(page.number)">{{page.text}}</a></li>'+"  </ul>"+"</div>"+"")}]);
angular.module("template/popover/popover.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/popover/popover.html",'<div class="popover {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">'+'  <div class="arrow"></div>'+""+'  <div class="popover-inner">'+'      <h3 class="popover-title" ng-bind="popoverTitle" ng-show="popoverTitle"></h3>'+'      <div class="popover-content" ng-bind="popoverContent"></div>'+"  </div>"+"</div>"+"")}]);
angular.module("template/tabs/pane.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/tabs/pane.html",'<div class="tab-pane" ng-class="{active: selected}" ng-show="selected" ng-transclude></div>'+"")}]);
angular.module("template/tabs/tabs.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/tabs/tabs.html",'<div class="tabbable">'+'  <ul class="nav nav-tabs">'+'    <li ng-repeat="pane in panes" ng-class="{active:pane.selected}" tab-counter>'+'      <a href="" ng-click="select(pane)">{{pane.heading}}</a>'+"      <span class=\"tab-active-count\" data-tab-name='{{pane.heading}}'></span>"+"    </li>"+"  </ul>"+'  <div class="tab-content" ng-transclude></div>'+"</div>"+
"")}]);angular.module("template/tooltip/tooltip-popup.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/tooltip/tooltip-popup.html",'<div class="tooltip {{placement}}" ng-class="{ in: isOpen(), fade: animation() }">'+'  <div class="tooltip-arrow"></div>'+'  <div class="tooltip-inner" ng-bind="tooltipTitle"></div>'+"</div>"+"")}]);
angular.module("template/typeahead/typeahead.html",[]).run(["$templateCache",function($templateCache){$templateCache.put("template/typeahead/typeahead.html",'<div class="dropdown clearfix" ng-class="{open: isOpen()}">'+'    <ul class="typeahead dropdown-menu">'+'        <li ng-repeat="match in matches" ng-class="{active: isActive($index) }" ng-mouseenter="selectActive($index)">'+'            <a tabindex="-1" ng-click="selectMatch($index)" ng-bind-html-unsafe="match.label | typeaheadHighlight:query"></a>'+
"        </li>"+"    </ul>"+"</div>")}]);